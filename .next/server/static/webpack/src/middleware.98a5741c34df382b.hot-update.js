"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware),\n/* harmony export */   preferredRegion: () => (/* binding */ preferredRegion),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n// src/middleware.ts\n\n// Force Node.js runtime for middleware\nconst runtime = \"nodejs\";\n// Ensure this middleware executes on the server only\nconst preferredRegion = \"auto\";\n// API base URL\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5001/api\";\nasync function verifyTokenWithBackend(token) {\n    try {\n        const response = await fetch(`${API_BASE_URL}/auth/verify`, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        if (!response.ok) return null;\n        return response.json();\n    } catch (error) {\n        console.error(\"[verifyTokenWithBackend] Error:\", error);\n        return null;\n    }\n}\nasync function middleware(request) {\n    const path = request.nextUrl.pathname;\n    const isProtectedPath = path.includes(\"/dashboard\") || path.startsWith(\"/api/private\");\n    const isPublicPath = path === \"/auth/login\" || path === \"/auth/register\" || path === \"/auth/forgot-password\";\n    const token = request.cookies.get(\"token\")?.value;\n    console.log(\"[Middleware] Path:\", path);\n    console.log(\"[Middleware] Token present:\", !!token);\n    if (isProtectedPath && !token) {\n        console.log(\"[Middleware] Protected path, no token. Redirecting to /auth/login\");\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/auth/login\", request.url));\n    }\n    if (token) {\n        const decodedToken = await verifyTokenWithBackend(token);\n        console.log(\"[Middleware] Decoded token:\", decodedToken);\n        if (isProtectedPath && !decodedToken) {\n            console.log(\"[Middleware] Protected path, invalid token. Redirecting to /auth/login\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/auth/login\", request.url));\n        }\n        if (isPublicPath && decodedToken) {\n            const farmSlug = decodedToken.farmSlug;\n            if (farmSlug) {\n                console.log(\"[Middleware] Public path, valid token. Redirecting to dashboard:\", `/${farmSlug}/dashboard`);\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(`/${farmSlug}/dashboard`, request.url));\n            }\n        }\n    }\n    console.log(\"[Middleware] No redirect, proceeding.\");\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n}\nconst config = {\n    matcher: [\n        \"/((?!api/(?!private)|_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDdUI7QUFHM0MsdUNBQXVDO0FBQ2hDLE1BQU1DLFVBQVUsU0FBUztBQUNoQyxxREFBcUQ7QUFDOUMsTUFBTUMsa0JBQWtCLE9BQU87QUFFdEMsZUFBZTtBQUNmLE1BQU1DLGVBQWVDLFFBQVFDLEdBQUcsQ0FBQ0MsbUJBQW1CLElBQUk7QUFFeEQsZUFBZUMsdUJBQXVCQyxLQUFhO0lBQ2pELElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sQ0FBQyxFQUFFUCxhQUFhLFlBQVksQ0FBQyxFQUFFO1lBQzFEUSxTQUFTO2dCQUFFQyxlQUFlLENBQUMsT0FBTyxFQUFFSixNQUFNLENBQUM7WUFBQztRQUM5QztRQUVBLElBQUksQ0FBQ0MsU0FBU0ksRUFBRSxFQUFFLE9BQU87UUFDekIsT0FBT0osU0FBU0ssSUFBSTtJQUN0QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLG1DQUFtQ0E7UUFDakQsT0FBTztJQUNUO0FBQ0Y7QUFFTyxlQUFlRSxXQUFXQyxPQUFvQjtJQUNuRCxNQUFNQyxPQUFPRCxRQUFRRSxPQUFPLENBQUNDLFFBQVE7SUFFckMsTUFBTUMsa0JBQWtCSCxLQUFLSSxRQUFRLENBQUMsaUJBQWlCSixLQUFLSyxVQUFVLENBQUM7SUFDdkUsTUFBTUMsZUFBZU4sU0FBUyxpQkFBaUJBLFNBQVMsb0JBQW9CQSxTQUFTO0lBQ3JGLE1BQU1YLFFBQVFVLFFBQVFRLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFVBQVVDO0lBRTVDWixRQUFRYSxHQUFHLENBQUMsc0JBQXNCVjtJQUNsQ0gsUUFBUWEsR0FBRyxDQUFDLCtCQUErQixDQUFDLENBQUNyQjtJQUU3QyxJQUFJYyxtQkFBbUIsQ0FBQ2QsT0FBTztRQUM3QlEsUUFBUWEsR0FBRyxDQUFDO1FBQ1osT0FBTzdCLGtGQUFZQSxDQUFDOEIsUUFBUSxDQUFDLElBQUlDLElBQUksZUFBZWIsUUFBUWMsR0FBRztJQUNqRTtJQUVBLElBQUl4QixPQUFPO1FBQ1QsTUFBTXlCLGVBQWUsTUFBTTFCLHVCQUF1QkM7UUFDbERRLFFBQVFhLEdBQUcsQ0FBQywrQkFBK0JJO1FBRTNDLElBQUlYLG1CQUFtQixDQUFDVyxjQUFjO1lBQ3BDakIsUUFBUWEsR0FBRyxDQUFDO1lBQ1osT0FBTzdCLGtGQUFZQSxDQUFDOEIsUUFBUSxDQUFDLElBQUlDLElBQUksZUFBZWIsUUFBUWMsR0FBRztRQUNqRTtRQUVBLElBQUlQLGdCQUFnQlEsY0FBYztZQUNoQyxNQUFNQyxXQUFXRCxhQUFhQyxRQUFRO1lBQ3RDLElBQUlBLFVBQVU7Z0JBQ1psQixRQUFRYSxHQUFHLENBQUMsb0VBQW9FLENBQUMsQ0FBQyxFQUFFSyxTQUFTLFVBQVUsQ0FBQztnQkFDeEcsT0FBT2xDLGtGQUFZQSxDQUFDOEIsUUFBUSxDQUFDLElBQUlDLElBQUksQ0FBQyxDQUFDLEVBQUVHLFNBQVMsVUFBVSxDQUFDLEVBQUVoQixRQUFRYyxHQUFHO1lBQzVFO1FBQ0Y7SUFDRjtJQUVBaEIsUUFBUWEsR0FBRyxDQUFDO0lBQ1osT0FBTzdCLGtGQUFZQSxDQUFDbUMsSUFBSTtBQUMxQjtBQUVPLE1BQU1DLFNBQVM7SUFDcEJDLFNBQVM7UUFDUDtLQUNEO0FBQ0gsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbWlkZGxld2FyZS50cz9kMTk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9taWRkbGV3YXJlLnRzXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgdHlwZSB7IE5leHRSZXF1ZXN0IH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuXG4vLyBGb3JjZSBOb2RlLmpzIHJ1bnRpbWUgZm9yIG1pZGRsZXdhcmVcbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcyc7XG4vLyBFbnN1cmUgdGhpcyBtaWRkbGV3YXJlIGV4ZWN1dGVzIG9uIHRoZSBzZXJ2ZXIgb25seVxuZXhwb3J0IGNvbnN0IHByZWZlcnJlZFJlZ2lvbiA9ICdhdXRvJztcblxuLy8gQVBJIGJhc2UgVVJMXG5jb25zdCBBUElfQkFTRV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjUwMDEvYXBpJztcblxuYXN5bmMgZnVuY3Rpb24gdmVyaWZ5VG9rZW5XaXRoQmFja2VuZCh0b2tlbjogc3RyaW5nKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfQkFTRV9VUkx9L2F1dGgvdmVyaWZ5YCwge1xuICAgICAgaGVhZGVyczogeyBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCB9LFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdbdmVyaWZ5VG9rZW5XaXRoQmFja2VuZF0gRXJyb3I6JywgZXJyb3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIGNvbnN0IHBhdGggPSByZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWU7XG5cbiAgY29uc3QgaXNQcm90ZWN0ZWRQYXRoID0gcGF0aC5pbmNsdWRlcygnL2Rhc2hib2FyZCcpIHx8IHBhdGguc3RhcnRzV2l0aCgnL2FwaS9wcml2YXRlJyk7XG4gIGNvbnN0IGlzUHVibGljUGF0aCA9IHBhdGggPT09ICcvYXV0aC9sb2dpbicgfHwgcGF0aCA9PT0gJy9hdXRoL3JlZ2lzdGVyJyB8fCBwYXRoID09PSAnL2F1dGgvZm9yZ290LXBhc3N3b3JkJztcbiAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LmNvb2tpZXMuZ2V0KCd0b2tlbicpPy52YWx1ZTtcblxuICBjb25zb2xlLmxvZygnW01pZGRsZXdhcmVdIFBhdGg6JywgcGF0aCk7XG4gIGNvbnNvbGUubG9nKCdbTWlkZGxld2FyZV0gVG9rZW4gcHJlc2VudDonLCAhIXRva2VuKTtcblxuICBpZiAoaXNQcm90ZWN0ZWRQYXRoICYmICF0b2tlbikge1xuICAgIGNvbnNvbGUubG9nKCdbTWlkZGxld2FyZV0gUHJvdGVjdGVkIHBhdGgsIG5vIHRva2VuLiBSZWRpcmVjdGluZyB0byAvYXV0aC9sb2dpbicpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2F1dGgvbG9naW4nLCByZXF1ZXN0LnVybCkpO1xuICB9XG5cbiAgaWYgKHRva2VuKSB7XG4gICAgY29uc3QgZGVjb2RlZFRva2VuID0gYXdhaXQgdmVyaWZ5VG9rZW5XaXRoQmFja2VuZCh0b2tlbik7XG4gICAgY29uc29sZS5sb2coJ1tNaWRkbGV3YXJlXSBEZWNvZGVkIHRva2VuOicsIGRlY29kZWRUb2tlbik7XG5cbiAgICBpZiAoaXNQcm90ZWN0ZWRQYXRoICYmICFkZWNvZGVkVG9rZW4pIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbTWlkZGxld2FyZV0gUHJvdGVjdGVkIHBhdGgsIGludmFsaWQgdG9rZW4uIFJlZGlyZWN0aW5nIHRvIC9hdXRoL2xvZ2luJyk7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy9hdXRoL2xvZ2luJywgcmVxdWVzdC51cmwpKTtcbiAgICB9XG5cbiAgICBpZiAoaXNQdWJsaWNQYXRoICYmIGRlY29kZWRUb2tlbikge1xuICAgICAgY29uc3QgZmFybVNsdWcgPSBkZWNvZGVkVG9rZW4uZmFybVNsdWc7XG4gICAgICBpZiAoZmFybVNsdWcpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tNaWRkbGV3YXJlXSBQdWJsaWMgcGF0aCwgdmFsaWQgdG9rZW4uIFJlZGlyZWN0aW5nIHRvIGRhc2hib2FyZDonLCBgLyR7ZmFybVNsdWd9L2Rhc2hib2FyZGApO1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoYC8ke2Zhcm1TbHVnfS9kYXNoYm9hcmRgLCByZXF1ZXN0LnVybCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbnNvbGUubG9nKCdbTWlkZGxld2FyZV0gTm8gcmVkaXJlY3QsIHByb2NlZWRpbmcuJyk7XG4gIHJldHVybiBOZXh0UmVzcG9uc2UubmV4dCgpO1xufVxuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBtYXRjaGVyOiBbXG4gICAgJy8oKD8hYXBpLyg/IXByaXZhdGUpfF9uZXh0L3N0YXRpY3xfbmV4dC9pbWFnZXxmYXZpY29uLmljbykuKiknLFxuICBdLFxufTsiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwicnVudGltZSIsInByZWZlcnJlZFJlZ2lvbiIsIkFQSV9CQVNFX1VSTCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwidmVyaWZ5VG9rZW5XaXRoQmFja2VuZCIsInRva2VuIiwicmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwib2siLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwibWlkZGxld2FyZSIsInJlcXVlc3QiLCJwYXRoIiwibmV4dFVybCIsInBhdGhuYW1lIiwiaXNQcm90ZWN0ZWRQYXRoIiwiaW5jbHVkZXMiLCJzdGFydHNXaXRoIiwiaXNQdWJsaWNQYXRoIiwiY29va2llcyIsImdldCIsInZhbHVlIiwibG9nIiwicmVkaXJlY3QiLCJVUkwiLCJ1cmwiLCJkZWNvZGVkVG9rZW4iLCJmYXJtU2x1ZyIsIm5leHQiLCJjb25maWciLCJtYXRjaGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});