"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware),\n/* harmony export */   preferredRegion: () => (/* binding */ preferredRegion),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n// src/middleware.ts\n\n// Force Node.js runtime for middleware\nconst runtime = \"nodejs\";\n// Ensure this middleware executes on the server only\nconst preferredRegion = \"auto\";\n// API base URL\nconst API_BASE_URL = \"http://localhost:5001\" || 0;\nasync function verifyTokenWithBackend(token) {\n    try {\n        const response = await fetch(`${API_BASE_URL}/auth/verify`, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        if (!response.ok) return null;\n        return response.json();\n    } catch (error) {\n        console.error(\"[verifyTokenWithBackend] Error:\", error);\n        return null;\n    }\n}\nasync function middleware(request) {\n    const path = request.nextUrl.pathname;\n    const isProtectedPath = path.includes(\"/dashboard\") || path.startsWith(\"/api/private\");\n    const isPublicPath = path === \"/auth/login\" || path === \"/auth/register\" || path === \"/auth/forgot-password\";\n    const token = request.cookies.get(\"token\")?.value;\n    console.log(\"[Middleware] Path:\", path);\n    console.log(\"[Middleware] Token present:\", !!token);\n    if (isProtectedPath && !token) {\n        console.log(\"[Middleware] Protected path, no token. Redirecting to /auth/login\");\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/auth/login\", request.url));\n    }\n    if (token) {\n        const decodedToken = await verifyTokenWithBackend(token);\n        console.log(\"[Middleware] Decoded token:\", decodedToken);\n        if (isProtectedPath && !decodedToken) {\n            console.log(\"[Middleware] Protected path, invalid token. Redirecting to /auth/login\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/auth/login\", request.url));\n        }\n        if (isPublicPath && decodedToken) {\n            const farmSlug = decodedToken.farmSlug;\n            if (farmSlug) {\n                console.log(\"[Middleware] Public path, valid token. Redirecting to dashboard:\", `/${farmSlug}/dashboard`);\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(`/${farmSlug}/dashboard`, request.url));\n            }\n        }\n    }\n    console.log(\"[Middleware] No redirect, proceeding.\");\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n}\nconst config = {\n    matcher: [\n        \"/((?!api/(?!private)|_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDdUI7QUFHM0MsdUNBQXVDO0FBQ2hDLE1BQU1DLFVBQVUsU0FBUztBQUNoQyxxREFBcUQ7QUFDOUMsTUFBTUMsa0JBQWtCLE9BQU87QUFFdEMsZUFBZTtBQUNmLE1BQU1DLGVBQWVDLHVCQUFnQyxJQUFJO0FBRXpELGVBQWVHLHVCQUF1QkMsS0FBYTtJQUNqRCxJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLENBQUMsRUFBRVAsYUFBYSxZQUFZLENBQUMsRUFBRTtZQUMxRFEsU0FBUztnQkFBRUMsZUFBZSxDQUFDLE9BQU8sRUFBRUosTUFBTSxDQUFDO1lBQUM7UUFDOUM7UUFFQSxJQUFJLENBQUNDLFNBQVNJLEVBQUUsRUFBRSxPQUFPO1FBQ3pCLE9BQU9KLFNBQVNLLElBQUk7SUFDdEIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxtQ0FBbUNBO1FBQ2pELE9BQU87SUFDVDtBQUNGO0FBRU8sZUFBZUUsV0FBV0MsT0FBb0I7SUFDbkQsTUFBTUMsT0FBT0QsUUFBUUUsT0FBTyxDQUFDQyxRQUFRO0lBRXJDLE1BQU1DLGtCQUFrQkgsS0FBS0ksUUFBUSxDQUFDLGlCQUFpQkosS0FBS0ssVUFBVSxDQUFDO0lBQ3ZFLE1BQU1DLGVBQWVOLFNBQVMsaUJBQWlCQSxTQUFTLG9CQUFvQkEsU0FBUztJQUNyRixNQUFNWCxRQUFRVSxRQUFRUSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxVQUFVQztJQUU1Q1osUUFBUWEsR0FBRyxDQUFDLHNCQUFzQlY7SUFDbENILFFBQVFhLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDckI7SUFFN0MsSUFBSWMsbUJBQW1CLENBQUNkLE9BQU87UUFDN0JRLFFBQVFhLEdBQUcsQ0FBQztRQUNaLE9BQU83QixrRkFBWUEsQ0FBQzhCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLGVBQWViLFFBQVFjLEdBQUc7SUFDakU7SUFFQSxJQUFJeEIsT0FBTztRQUNULE1BQU15QixlQUFlLE1BQU0xQix1QkFBdUJDO1FBQ2xEUSxRQUFRYSxHQUFHLENBQUMsK0JBQStCSTtRQUUzQyxJQUFJWCxtQkFBbUIsQ0FBQ1csY0FBYztZQUNwQ2pCLFFBQVFhLEdBQUcsQ0FBQztZQUNaLE9BQU83QixrRkFBWUEsQ0FBQzhCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLGVBQWViLFFBQVFjLEdBQUc7UUFDakU7UUFFQSxJQUFJUCxnQkFBZ0JRLGNBQWM7WUFDaEMsTUFBTUMsV0FBV0QsYUFBYUMsUUFBUTtZQUN0QyxJQUFJQSxVQUFVO2dCQUNabEIsUUFBUWEsR0FBRyxDQUFDLG9FQUFvRSxDQUFDLENBQUMsRUFBRUssU0FBUyxVQUFVLENBQUM7Z0JBQ3hHLE9BQU9sQyxrRkFBWUEsQ0FBQzhCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLENBQUMsQ0FBQyxFQUFFRyxTQUFTLFVBQVUsQ0FBQyxFQUFFaEIsUUFBUWMsR0FBRztZQUM1RTtRQUNGO0lBQ0Y7SUFFQWhCLFFBQVFhLEdBQUcsQ0FBQztJQUNaLE9BQU83QixrRkFBWUEsQ0FBQ21DLElBQUk7QUFDMUI7QUFFTyxNQUFNQyxTQUFTO0lBQ3BCQyxTQUFTO1FBQ1A7S0FDRDtBQUNILEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21pZGRsZXdhcmUudHM/ZDE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbWlkZGxld2FyZS50c1xuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHR5cGUgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJztcblxuLy8gRm9yY2UgTm9kZS5qcyBydW50aW1lIGZvciBtaWRkbGV3YXJlXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xuLy8gRW5zdXJlIHRoaXMgbWlkZGxld2FyZSBleGVjdXRlcyBvbiB0aGUgc2VydmVyIG9ubHlcbmV4cG9ydCBjb25zdCBwcmVmZXJyZWRSZWdpb24gPSAnYXV0byc7XG5cbi8vIEFQSSBiYXNlIFVSTFxuY29uc3QgQVBJX0JBU0VfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQkFTRV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMS9hcGknO1xuXG5hc3luYyBmdW5jdGlvbiB2ZXJpZnlUb2tlbldpdGhCYWNrZW5kKHRva2VuOiBzdHJpbmcpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9CQVNFX1VSTH0vYXV0aC92ZXJpZnlgLCB7XG4gICAgICBoZWFkZXJzOiB7IEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbn1gIH0sXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1t2ZXJpZnlUb2tlbldpdGhCYWNrZW5kXSBFcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3QgcGF0aCA9IHJlcXVlc3QubmV4dFVybC5wYXRobmFtZTtcblxuICBjb25zdCBpc1Byb3RlY3RlZFBhdGggPSBwYXRoLmluY2x1ZGVzKCcvZGFzaGJvYXJkJykgfHwgcGF0aC5zdGFydHNXaXRoKCcvYXBpL3ByaXZhdGUnKTtcbiAgY29uc3QgaXNQdWJsaWNQYXRoID0gcGF0aCA9PT0gJy9hdXRoL2xvZ2luJyB8fCBwYXRoID09PSAnL2F1dGgvcmVnaXN0ZXInIHx8IHBhdGggPT09ICcvYXV0aC9mb3Jnb3QtcGFzc3dvcmQnO1xuICBjb25zdCB0b2tlbiA9IHJlcXVlc3QuY29va2llcy5nZXQoJ3Rva2VuJyk/LnZhbHVlO1xuXG4gIGNvbnNvbGUubG9nKCdbTWlkZGxld2FyZV0gUGF0aDonLCBwYXRoKTtcbiAgY29uc29sZS5sb2coJ1tNaWRkbGV3YXJlXSBUb2tlbiBwcmVzZW50OicsICEhdG9rZW4pO1xuXG4gIGlmIChpc1Byb3RlY3RlZFBhdGggJiYgIXRva2VuKSB7XG4gICAgY29uc29sZS5sb2coJ1tNaWRkbGV3YXJlXSBQcm90ZWN0ZWQgcGF0aCwgbm8gdG9rZW4uIFJlZGlyZWN0aW5nIHRvIC9hdXRoL2xvZ2luJyk7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvYXV0aC9sb2dpbicsIHJlcXVlc3QudXJsKSk7XG4gIH1cblxuICBpZiAodG9rZW4pIHtcbiAgICBjb25zdCBkZWNvZGVkVG9rZW4gPSBhd2FpdCB2ZXJpZnlUb2tlbldpdGhCYWNrZW5kKHRva2VuKTtcbiAgICBjb25zb2xlLmxvZygnW01pZGRsZXdhcmVdIERlY29kZWQgdG9rZW46JywgZGVjb2RlZFRva2VuKTtcblxuICAgIGlmIChpc1Byb3RlY3RlZFBhdGggJiYgIWRlY29kZWRUb2tlbikge1xuICAgICAgY29uc29sZS5sb2coJ1tNaWRkbGV3YXJlXSBQcm90ZWN0ZWQgcGF0aCwgaW52YWxpZCB0b2tlbi4gUmVkaXJlY3RpbmcgdG8gL2F1dGgvbG9naW4nKTtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2F1dGgvbG9naW4nLCByZXF1ZXN0LnVybCkpO1xuICAgIH1cblxuICAgIGlmIChpc1B1YmxpY1BhdGggJiYgZGVjb2RlZFRva2VuKSB7XG4gICAgICBjb25zdCBmYXJtU2x1ZyA9IGRlY29kZWRUb2tlbi5mYXJtU2x1ZztcbiAgICAgIGlmIChmYXJtU2x1Zykge1xuICAgICAgICBjb25zb2xlLmxvZygnW01pZGRsZXdhcmVdIFB1YmxpYyBwYXRoLCB2YWxpZCB0b2tlbi4gUmVkaXJlY3RpbmcgdG8gZGFzaGJvYXJkOicsIGAvJHtmYXJtU2x1Z30vZGFzaGJvYXJkYCk7XG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTChgLyR7ZmFybVNsdWd9L2Rhc2hib2FyZGAsIHJlcXVlc3QudXJsKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29uc29sZS5sb2coJ1tNaWRkbGV3YXJlXSBObyByZWRpcmVjdCwgcHJvY2VlZGluZy4nKTtcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XG59XG5cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIG1hdGNoZXI6IFtcbiAgICAnLygoPyFhcGkvKD8hcHJpdmF0ZSl8X25leHQvc3RhdGljfF9uZXh0L2ltYWdlfGZhdmljb24uaWNvKS4qKScsXG4gIF0sXG59OyJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJydW50aW1lIiwicHJlZmVycmVkUmVnaW9uIiwiQVBJX0JBU0VfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0JBU0VfVVJMIiwidmVyaWZ5VG9rZW5XaXRoQmFja2VuZCIsInRva2VuIiwicmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwib2siLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwibWlkZGxld2FyZSIsInJlcXVlc3QiLCJwYXRoIiwibmV4dFVybCIsInBhdGhuYW1lIiwiaXNQcm90ZWN0ZWRQYXRoIiwiaW5jbHVkZXMiLCJzdGFydHNXaXRoIiwiaXNQdWJsaWNQYXRoIiwiY29va2llcyIsImdldCIsInZhbHVlIiwibG9nIiwicmVkaXJlY3QiLCJVUkwiLCJ1cmwiLCJkZWNvZGVkVG9rZW4iLCJmYXJtU2x1ZyIsIm5leHQiLCJjb25maWciLCJtYXRjaGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});