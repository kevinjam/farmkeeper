"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware),\n/* harmony export */   preferredRegion: () => (/* binding */ preferredRegion),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n// src/middleware.ts\n\n// Force Node.js runtime for middleware\nconst runtime = \"nodejs\";\n// Ensure this middleware executes on the server only\nconst preferredRegion = \"auto\";\n// API base URL\nconst API_BASE_URL = \"http://localhost:5001\" || 0;\nasync function verifyTokenWithBackend(token) {\n    try {\n        const response = await fetch(`${API_BASE_URL}/auth/verify`, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        if (!response.ok) return null;\n        return response.json();\n    } catch (error) {\n        console.error(\"[verifyTokenWithBackend] Error:\", error);\n        return null;\n    }\n}\nasync function middleware(request) {\n    const path = request.nextUrl.pathname;\n    const isProtectedPath = path.includes(\"/dashboard\") || path.startsWith(\"/api/private\");\n    const isPublicPath = path === \"/auth/login\" || path === \"/auth/register\" || path === \"/auth/forgot-password\";\n    const token = request.cookies.get(\"token\")?.value;\n    console.log(\"[Middleware] Path:\", path);\n    console.log(\"[Middleware] Token present:\", !!token);\n    if (isProtectedPath && !token) {\n        console.log(\"[Middleware] Protected path, no token. Redirecting to /auth/login\");\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/auth/login\", request.url));\n    }\n    if (token) {\n        const decodedToken = await verifyTokenWithBackend(token);\n        console.log(\"[Middleware] Decoded token:\", decodedToken);\n        if (isProtectedPath && !decodedToken) {\n            console.log(\"[Middleware] Protected path, invalid token. Redirecting to /auth/login\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/auth/login\", request.url));\n        }\n        if (isPublicPath && decodedToken) {\n            const farmSlug = decodedToken.farmSlug;\n            if (farmSlug) {\n                console.log(\"[Middleware] Public path, valid token. Redirecting to dashboard:\", `/${farmSlug}/dashboard`);\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(`/${farmSlug}/dashboard`, request.url));\n            }\n        }\n    }\n    console.log(\"[Middleware] No redirect, proceeding.\");\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n}\nconst config = {\n    matcher: [\n        \"/((?!api/(?!private)|_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDdUI7QUFHM0MsdUNBQXVDO0FBQ2hDLE1BQU1DLFVBQVUsU0FBUztBQUNoQyxxREFBcUQ7QUFDOUMsTUFBTUMsa0JBQWtCLE9BQU87QUFFdEMsZUFBZTtBQUNmLE1BQU1DLGVBQWVDLHVCQUFnQyxJQUFJO0FBRXpELGVBQWVHLHVCQUF1QkMsS0FBYTtJQUNqRCxJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLENBQUMsRUFBRVAsYUFBYSxZQUFZLENBQUMsRUFBRTtZQUMxRFEsU0FBUztnQkFBRUMsZUFBZSxDQUFDLE9BQU8sRUFBRUosTUFBTSxDQUFDO1lBQUM7UUFDOUM7UUFFQSxJQUFJLENBQUNDLFNBQVNJLEVBQUUsRUFBRSxPQUFPO1FBQ3pCLE9BQU9KLFNBQVNLLElBQUk7SUFDdEIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxtQ0FBbUNBO1FBQ2pELE9BQU87SUFDVDtBQUNGO0FBRU8sZUFBZUUsV0FBV0MsT0FBb0I7SUFDbkQsTUFBTUMsT0FBT0QsUUFBUUUsT0FBTyxDQUFDQyxRQUFRO0lBRXJDLE1BQU1DLGtCQUFrQkgsS0FBS0ksUUFBUSxDQUFDLGlCQUFpQkosS0FBS0ssVUFBVSxDQUFDO0lBQ3ZFLE1BQU1DLGVBQWVOLFNBQVMsaUJBQWlCQSxTQUFTLG9CQUFvQkEsU0FBUztJQUNyRixNQUFNWCxRQUFRVSxRQUFRUSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxVQUFVQztJQUU1Q1osUUFBUWEsR0FBRyxDQUFDLHNCQUFzQlY7SUFDbENILFFBQVFhLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDckI7SUFFN0MsSUFBSWMsbUJBQW1CLENBQUNkLE9BQU87UUFDN0JRLFFBQVFhLEdBQUcsQ0FBQztRQUNaLE9BQU83QixrRkFBWUEsQ0FBQzhCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLGVBQWViLFFBQVFjLEdBQUc7SUFDakU7SUFFQSxJQUFJeEIsT0FBTztRQUNULE1BQU15QixlQUFlLE1BQU0xQix1QkFBdUJDO1FBQ2xEUSxRQUFRYSxHQUFHLENBQUMsK0JBQStCSTtRQUUzQyxJQUFJWCxtQkFBbUIsQ0FBQ1csY0FBYztZQUNwQ2pCLFFBQVFhLEdBQUcsQ0FBQztZQUNaLE9BQU83QixrRkFBWUEsQ0FBQzhCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLGVBQWViLFFBQVFjLEdBQUc7UUFDakU7UUFFQSxJQUFJUCxnQkFBZ0JRLGNBQWM7WUFDaEMsTUFBTUMsV0FBV0QsYUFBYUMsUUFBUTtZQUN0QyxJQUFJQSxVQUFVO2dCQUNabEIsUUFBUWEsR0FBRyxDQUFDLG9FQUFvRSxDQUFDLENBQUMsRUFBRUssU0FBUyxVQUFVLENBQUM7Z0JBQ3hHLE9BQU9sQyxrRkFBWUEsQ0FBQzhCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLENBQUMsQ0FBQyxFQUFFRyxTQUFTLFVBQVUsQ0FBQyxFQUFFaEIsUUFBUWMsR0FBRztZQUM1RTtRQUNGO0lBQ0Y7SUFFQWhCLFFBQVFhLEdBQUcsQ0FBQztJQUNaLE9BQU83QixrRkFBWUEsQ0FBQ21DLElBQUk7QUFDMUI7QUFFTyxNQUFNQyxTQUFTO0lBQ3BCQyxTQUFTO1FBQ1A7S0FDRDtBQUNILEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21pZGRsZXdhcmUudHM/ZDE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbWlkZGxld2FyZS50c1xuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHR5cGUgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJztcblxuLy8gRm9yY2UgTm9kZS5qcyBydW50aW1lIGZvciBtaWRkbGV3YXJlXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xuLy8gRW5zdXJlIHRoaXMgbWlkZGxld2FyZSBleGVjdXRlcyBvbiB0aGUgc2VydmVyIG9ubHlcbmV4cG9ydCBjb25zdCBwcmVmZXJyZWRSZWdpb24gPSAnYXV0byc7XG5cbi8vIEFQSSBiYXNlIFVSTFxuY29uc3QgQVBJX0JBU0VfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQkFTRV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMSc7XG5cbmFzeW5jIGZ1bmN0aW9uIHZlcmlmeVRva2VuV2l0aEJhY2tlbmQodG9rZW46IHN0cmluZykge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7QVBJX0JBU0VfVVJMfS9hdXRoL3ZlcmlmeWAsIHtcbiAgICAgIGhlYWRlcnM6IHsgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAgfSxcbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHJldHVybiBudWxsO1xuICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignW3ZlcmlmeVRva2VuV2l0aEJhY2tlbmRdIEVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICBjb25zdCBwYXRoID0gcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lO1xuXG4gIGNvbnN0IGlzUHJvdGVjdGVkUGF0aCA9IHBhdGguaW5jbHVkZXMoJy9kYXNoYm9hcmQnKSB8fCBwYXRoLnN0YXJ0c1dpdGgoJy9hcGkvcHJpdmF0ZScpO1xuICBjb25zdCBpc1B1YmxpY1BhdGggPSBwYXRoID09PSAnL2F1dGgvbG9naW4nIHx8IHBhdGggPT09ICcvYXV0aC9yZWdpc3RlcicgfHwgcGF0aCA9PT0gJy9hdXRoL2ZvcmdvdC1wYXNzd29yZCc7XG4gIGNvbnN0IHRva2VuID0gcmVxdWVzdC5jb29raWVzLmdldCgndG9rZW4nKT8udmFsdWU7XG5cbiAgY29uc29sZS5sb2coJ1tNaWRkbGV3YXJlXSBQYXRoOicsIHBhdGgpO1xuICBjb25zb2xlLmxvZygnW01pZGRsZXdhcmVdIFRva2VuIHByZXNlbnQ6JywgISF0b2tlbik7XG5cbiAgaWYgKGlzUHJvdGVjdGVkUGF0aCAmJiAhdG9rZW4pIHtcbiAgICBjb25zb2xlLmxvZygnW01pZGRsZXdhcmVdIFByb3RlY3RlZCBwYXRoLCBubyB0b2tlbi4gUmVkaXJlY3RpbmcgdG8gL2F1dGgvbG9naW4nKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy9hdXRoL2xvZ2luJywgcmVxdWVzdC51cmwpKTtcbiAgfVxuXG4gIGlmICh0b2tlbikge1xuICAgIGNvbnN0IGRlY29kZWRUb2tlbiA9IGF3YWl0IHZlcmlmeVRva2VuV2l0aEJhY2tlbmQodG9rZW4pO1xuICAgIGNvbnNvbGUubG9nKCdbTWlkZGxld2FyZV0gRGVjb2RlZCB0b2tlbjonLCBkZWNvZGVkVG9rZW4pO1xuXG4gICAgaWYgKGlzUHJvdGVjdGVkUGF0aCAmJiAhZGVjb2RlZFRva2VuKSB7XG4gICAgICBjb25zb2xlLmxvZygnW01pZGRsZXdhcmVdIFByb3RlY3RlZCBwYXRoLCBpbnZhbGlkIHRva2VuLiBSZWRpcmVjdGluZyB0byAvYXV0aC9sb2dpbicpO1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvYXV0aC9sb2dpbicsIHJlcXVlc3QudXJsKSk7XG4gICAgfVxuXG4gICAgaWYgKGlzUHVibGljUGF0aCAmJiBkZWNvZGVkVG9rZW4pIHtcbiAgICAgIGNvbnN0IGZhcm1TbHVnID0gZGVjb2RlZFRva2VuLmZhcm1TbHVnO1xuICAgICAgaWYgKGZhcm1TbHVnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbTWlkZGxld2FyZV0gUHVibGljIHBhdGgsIHZhbGlkIHRva2VuLiBSZWRpcmVjdGluZyB0byBkYXNoYm9hcmQ6JywgYC8ke2Zhcm1TbHVnfS9kYXNoYm9hcmRgKTtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKGAvJHtmYXJtU2x1Z30vZGFzaGJvYXJkYCwgcmVxdWVzdC51cmwpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjb25zb2xlLmxvZygnW01pZGRsZXdhcmVdIE5vIHJlZGlyZWN0LCBwcm9jZWVkaW5nLicpO1xuICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgbWF0Y2hlcjogW1xuICAgICcvKCg/IWFwaS8oPyFwcml2YXRlKXxfbmV4dC9zdGF0aWN8X25leHQvaW1hZ2V8ZmF2aWNvbi5pY28pLiopJyxcbiAgXSxcbn07Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInJ1bnRpbWUiLCJwcmVmZXJyZWRSZWdpb24iLCJBUElfQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQkFTRV9VUkwiLCJ2ZXJpZnlUb2tlbldpdGhCYWNrZW5kIiwidG9rZW4iLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJvayIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJtaWRkbGV3YXJlIiwicmVxdWVzdCIsInBhdGgiLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJpc1Byb3RlY3RlZFBhdGgiLCJpbmNsdWRlcyIsInN0YXJ0c1dpdGgiLCJpc1B1YmxpY1BhdGgiLCJjb29raWVzIiwiZ2V0IiwidmFsdWUiLCJsb2ciLCJyZWRpcmVjdCIsIlVSTCIsInVybCIsImRlY29kZWRUb2tlbiIsImZhcm1TbHVnIiwibmV4dCIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});